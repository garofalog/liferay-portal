@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "32";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();

		ACUtils.createFormAndAddToPage();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8121 | Test Summary: Assert clicking a form in the forms list navigates to the form overview page"
	@priority = "5"
	test CanNavigatesToFormsOverviewPage {
		Navigator.openURL();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		for (var n : list "1,2,3") {
			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			FormPortlet.waitFormRenderer(text = "Submit");

			FormFields.viewTextLabel(
				fieldLabel = "Text",
				fieldName = "Text");

			FormFields.editText(
				fieldName = "Text",
				fieldValue = "Test Assets");

			FormPortlet.submitLocalizedSuccessfully(buttonName = "Submit");

			Pause(locator1 = "5000");
		}

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Forms");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		ACNavigation.openItem(itemName = "Created Form Name");

		ACIndividualsDashboard.goToOverviewTab();

		ACNavigation.viewActiveSwitchTab(tabName = "Overview");

		for (var cardTitle : list "Visitors Behavior,Audience,Submissions by Location,Submissions by Technology,Form Abandonment,Asset Appears On") {
			ACCards.viewCards(cardTitle = "${cardTitle}");
		}

		for (var metric : list "Submissions,Views") {
			ACAssets.viewVisitorsBehaviorMetric(
				metricTitle = "${metric}",
				metricValue = "3");
		}
	}

	@description = "Form known individuals shows which individuals interact with the form"
	@priority = "5"
	test KnownIndividualsShowsWhichIndividualsInteractWithForm {
		Navigator.openURL();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		for (var name : list "ac,liferay,dxp") {
			JSONUser.addUser(
				userEmailAddress = "${name}@liferay.com",
				userFirstName = "${name}",
				userLastName = "${name}",
				userScreenName = "${name}");
		}

		ACDXPSettings.syncNewContactData();

		for (var name : list "ac,liferay,dxp") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "${name}@liferay.com",
				userLoginFullName = "${name} ${name}");

			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			FormPortlet.waitFormRenderer(text = "Submit");

			FormFields.viewTextLabel(
				fieldLabel = "Text",
				fieldName = "Text");

			FormFields.editText(
				fieldName = "Text",
				fieldValue = "Test Assets");

			FormPortlet.submitLocalizedSuccessfully(buttonName = "Submit");

			Pause(locator1 = "10000");
		}

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Forms");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		ACNavigation.openItem(itemName = "Created Form Name");

		ACNavigation.switchTab(tabName = "Known Individuals");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		for (var name : list "ac,liferay,dxp") {
			AssertElementPresent(
				key_userName = "${name} ${name}",
				locator1 = "ACSegments#SEGMENT_MEMBERS");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8120 | Test Summary: Assert forms list shows all of the forms in a list"
	@priority = "5"
	test ViewAllFormsShownInAssetList {
		for (var n : list "1,2,3") {
			ACUtils.addSiteAndPage(layoutName = "AC Page ${n}");
		}

		for (var n : list "1,2,3") {
			ACUtils.createFormAndAddToPage(
				formACTitle = "Created Form Name ${n}",
				layoutName = "AC Page ${n}");
		}

		Refresh();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		for (var pageName : list "AC Page,AC Page 1,AC Page 2,AC Page 3") {
			Navigator.gotoSitePage(
				pageName = "${pageName}",
				siteName = "Site Name");

			FormPortlet.waitFormRenderer(text = "Submit");

			FormFields.viewTextLabel(
				fieldLabel = "Text",
				fieldName = "Text");

			FormFields.editText(
				fieldName = "Text",
				fieldValue = "Test Assets");

			FormPortlet.submitLocalizedSuccessfully(buttonName = "Submit");

			Pause(locator1 = "5000");
		}

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Forms");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		for (var formACTitle : list "Created Form Name,Created Form Name 1,Created Form Name 2,Created Form Name 3") {
			ACAssets.viewAssets(assetName = "${formACTitle}");
		}
	}

	@description = "Forms visitor behavior card shows expected amount of views"
	@priority = "5"
	test VisitorBehaviorCardShowsExpectedAmountOfViews {
		Navigator.openURL();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		for (var n : list "1,2,3,4") {
			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			Pause(locator1 = "100");
		}

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Forms");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		ACNavigation.openItem(itemName = "Created Form Name");

		ACAssets.viewVisitorsBehaviorMetric(
			metricTitle = "Views",
			metricValue = "4");
	}

}