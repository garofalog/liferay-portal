@component-name = "portal-collaboration"
definition {

	property custom.properties = "default.layout.template.id=1_column${line.separator}jsonws.web.service.paths.excludes=";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Notification";
	property testray.main.component.name = "Notifications";

	var pageName = "Blogs Page";
	var portletName = "Blogs";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Blogs Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Blogs Page",
			widgetName = "Blogs");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Blogs.tearDownCP();

			NotificationsPortlet.tearDownUserDeliveries();

			Page.tearDownCP();

			JSONUser.tearDownNonAdminUsers();
		}
	}

	@priority = "4"
	@refactordone
	test CanDeleteNotifications {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		for (var entryCount : list "1,2") {
			BlogsNavigator.openToAddEntry(
				layoutName = "Blogs Page",
				siteURLKey = "guest");

			BlogsEntry.addEntryContent(
				entryContent = "Blogs Entry${entryCount} Content",
				entryTitle = "Blogs Entry${entryCount} Title");

			PortletEntry.publish();
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "2");

		Notifications.gotoNotifications();

		for (var entryCount : list "1,2") {
			Notifications.viewNewContent(
				assetType = "Blogs Entry",
				contentBody = "Blogs Entry${entryCount} Title",
				user = "userfn userln");
		}

		for (var entryCount : list "1,2") {
			Notifications.deleteNotification(contentBody = "Blogs Entry${entryCount} Title");
		}

		Notifications.viewDefaultContent();

		Notifications.viewNoNotifications(activePanel = "Notifications");
	}

	@priority = "4"
	@refactordone
	test CanMarkAllNotificationsAsRead {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		Notifications.viewNoNotifications(activePanel = "Profile");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		for (var entryCount : list "1,2,3") {
			BlogsNavigator.openToAddEntry(
				layoutName = "Blogs Page",
				siteURLKey = "guest");

			BlogsEntry.addEntryContent(
				entryContent = "Blogs Entry${entryCount} Content",
				entryTitle = "Blogs Entry${entryCount} Title");

			PortletEntry.publish();
		}

		Notifications.viewNoNotifications(activePanel = "Profile");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "3");

		Notifications.gotoNotifications();

		NotificationsPortlet.configureNotificationPG(menuItem = "Mark All Notifications as Read");

		Notifications.viewNoNotifications(activePanel = "Notifications");
	}

	@priority = "4"
	@refactordone
	test CanViewMultipleNotifications {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		for (var entryCount : list "1,2,3") {
			BlogsNavigator.openToAddEntry(
				layoutName = "Blogs Page",
				siteURLKey = "guest");

			BlogsEntry.addEntryContent(
				entryContent = "Blogs Entry${entryCount} Content",
				entryTitle = "Blogs Entry${entryCount} Title");

			PortletEntry.publish();
		}

		Notifications.viewNoNotifications(activePanel = "Profile");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "3");

		Notifications.gotoNotifications();

		Notifications.navigateToContent(contentBody = "Blogs Entry1 Title");

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "2");

		Notifications.gotoNotifications();

		Notifications.navigateToContent(contentBody = "Blogs Entry2 Title");

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry2 Content",
			entryTitle = "Blogs Entry2 Title");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.navigateToContent(contentBody = "Blogs Entry3 Title");

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry3 Content",
			entryTitle = "Blogs Entry3 Title");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "0");
	}

	@priority = "4"
	@refactordone
	test CanViewNoWebsiteNotificationForNewBlogsEntry {
		NotificationsPortlet.gotoNotificationDelivery();

		IFrame.selectConfigurationFrame();

		NotificationsPortlet.disableUserDeliveries(
			actionType = "Add",
			contentType = "Blogs",
			notificationType = "Website");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		BlogsNavigator.openToAddEntry(
			layoutName = "Blogs Page",
			siteURLKey = "guest");

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		PortletEntry.publish();

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(notificationCount = "0");
	}

	@priority = "4"
	@refactordone
	test CanViewNoWebsiteNotificationForUpdatedBlogsEntry {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Blogs.editEntryPG(
			entryContent = "Blogs Entry Content",
			entryContentEdit = "Blogs Entry Content Edit",
			entryTitle = "Blogs Entry Title",
			entryTitleEdit = "Blogs Entry Title Edit",
			groupName = "Guest",
			siteURLKey = "guest");

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(notificationCount = "0");
	}

	@description = "This test covers LPS-103502. It ensures that notifications are displayed correctly after being mentioned."
	@priority = "3"
	@refactordone
	test CanViewWebsiteNotificationForMention {
		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openToBlogEntry(
			entryTitle = "Blogs Entry Title",
			layoutName = "Blogs Page",
			siteURLKey = "guest");

		Mentions.addMentionViaComments(
			entryComment = "Comment mentioning",
			mentionsUserFullName = "userfn userln",
			mentionsUserScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewComment(
			assetType = "Blogs Entry",
			contentBody = "Comment mentioning @usersn",
			mentioned = "true",
			user = "Test Test");

		BlogsNavigator.openToBlogEntry(
			entryTitle = "Blogs Entry Title",
			layoutName = "Blogs Page",
			siteURLKey = "guest");

		Mentions.addMentionViaComments(
			entryComment = "Reply comment mentioning",
			mentionsUserFullName = "test test",
			mentionsUserScreenName = "test");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(notificationCount = "2");

		Notifications.gotoNotifications();

		Notifications.viewSpecificNotificationDetails(
			contentBody = "Reply comment mentioning @test",
			notificationsTitle = "userfn userln added a new comment to Blogs Entry Title");

		Notifications.viewSpecificNotificationDetails(
			contentBody = "Reply comment mentioning @test",
			notificationsTitle = "userfn userln mentioned you in a comment in a blogs entry");
	}

	@priority = "4"
	@refactordone
	test CanViewWebsiteNotificationForNewBlogsEntry {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		BlogsNavigator.openToAddEntry(
			layoutName = "Blogs Page",
			siteURLKey = "guest");

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		PortletEntry.publish();

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.navigateToContent(contentBody = "Blogs Entry Title");

		BlogsEntry.viewEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Notifications.viewBadgeCount(notificationCount = "0");
	}

	@priority = "4"
	@refactordone
	test CanViewWebsiteNotificationForNewCommentViaBlogs {
		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openToBlogEntry(
			entryTitle = "Blogs Entry Title",
			layoutName = "Blogs Page",
			siteURLKey = "guest");

		Comments.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		BlogsNavigator.openToBlogEntry(
			entryTitle = "Blogs Entry Title",
			layoutName = "Blogs Page",
			siteURLKey = "guest");

		Comments.addPG(entryComment = "Blogs Entry Comment");

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.navigateToContent(contentBody = "Blogs Entry Comment");

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Comments.viewPG(
			commentCount = "1",
			entryComment = "Blogs Entry Comment",
			userFullName = "userfn userln");

		Notifications.viewBadgeCount(notificationCount = "0");
	}

}