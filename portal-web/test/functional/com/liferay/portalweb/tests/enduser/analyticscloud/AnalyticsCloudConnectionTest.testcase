@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "32";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Sync Liferay Data Source Contacts"
	@priority = "5"
	test CanSyncAllContactsFromDXPToAC {
		ACDXPSettings.connectDXPtoAnalyticsCloud();

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "Liferay DXP");

		ACNavigation.goToIndividuals();

		ACNavigation.switchTab(tabName = "Known Individuals");

		ACUtils.searchBar(searchItem = "Test Test");

		ACIndividualsDashboard.goToKnownIndividualDetails(individualName = "Test Test");

		ACNavigation.switchTab(tabName = "Details");

		ACIndividualsDashboard.assertIndividualAttribute(individualAttribute = "test@liferay.com");

		ACIndividualsDashboard.assertIndividualAttribute(individualAttribute = "Test");
	}

	@description = "Validate if the user can connect AC to DXP"
	@priority = "5"
	test ConnectACtoDXP {
		ACDXPSettings.connectDXPtoAnalyticsCloud();
	}

}