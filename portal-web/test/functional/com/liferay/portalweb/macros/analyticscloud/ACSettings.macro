definition {

	macro addKeywords {
		Click(locator1 = "ACSettings#KEYWORD_BUTTON");

		Type(
			locator1 = "ACSettings#KEYWORD_TEXTFIELD",
			value1 = "${keyword}");

		Click(locator1 = "ACSettings#KEYWORD_SEND_BUTTON");
	}

	macro addUser {
		Click(locator1 = "ACSettings#INVITE_USERS_BUTTON");

		Type(
			locator1 = "ACSettings#INVITE_USERS_INPUT",
			value1 = "${userInvite}");

		Click(locator1 = "ACSettings#KEYWORD_SEND_BUTTON");
	}

	macro assertDataSourceName {
		var itemName = "${dataSourceName}";

		AssertElementPresent(locator1 = "ACSettings#ITEM_ON_LIST");
	}

	@summary = "Asserts the individuals usage value \
	@param individualUsageValue"
	macro assertIndividualsUsage() {
		AssertTextEquals(
			locator1 = "ACSettings#INDIVIDUALS_USAGE_METRIC",
			value1 = "${individualUsageValue}");
	}

	macro assertKeywords {
		var key_KeywordName = "${keyword}";

		AssertTextEquals(
			locator1 = "ACSettings#KEYWORD_NAME",
			value1 = "${keyword}");
	}

	@summary = "Asserts the page views usage value \
	@param pageViewsUsageValue"
	macro assertPageViewsUsage() {
		AssertTextEquals(
			locator1 = "ACSettings#PAGE_VIEWS_USAGE_METRIC",
			value1 = "${pageViewsUsageValue}");
	}

	@summary = "Asserts the users shown in list"
	macro assertUserList() {
		AssertTextEquals(
			locator1 = "ACSettings#USER_LIST",
			value1 = "${userName}");
	}

	macro assertUserListEmail {
		AssertTextEquals(
			locator1 = "ACSettings#USER_LIST_EMAIL",
			value1 = "${userEmail}");
	}

	@summary = "Deletes all properties \
	@param propertyList the list of properties you want to delete (optional)"
	macro deleteAllProperties {
		if (IsElementNotPresent(locator1 = "ACSettings#EXIT_SETTINGS_BUTTON")) {
			ACNavigation.goToSettings();
		}

		ACSettings.goToProperties();

		KeyPress(
			locator1 = "ACSettings#SELECT_ALL_CHECKBOX",
			value1 = "\SPACE");

		Click(locator1 = "ACSettings#GENERIC_DELETE_BUTTON");

		Copy(locator1 = "ACSettings#DELETE_CONFIRMATION_MESSAGE");

		Click(locator1 = "ACSettings#DELETE_CONFIRMATION_INPUT");

		Paste(locator1 = "ACSettings#DELETE_CONFIRMATION_INPUT");

		Click(locator1 = "ACSettings#DELETE_CONFIRMATION_BUTTON");
	}

	@summary = "Deletes a specific data source \
	@param dataSourceName the name of the data source you want to delete"
	macro deleteDataSource {
		var itemName = "${dataSourceName}";

		if (IsElementNotPresent(locator1 = "ACSettings#EXIT_SETTINGS_BUTTON")) {
			ACNavigation.goToSettings();
		}

		ACSettings.goToDataSources();

		while (IsElementPresent(locator1 = "ACSettings#ITEM_TABLE")) {
			Click(locator1 = "ACSettings#ITEM_TABLE");

			Click(locator1 = "ACSettings#DELETE_BUTTON_DATA_SOURCE");

			Copy(locator1 = "ACSettings#DELETE_CONFIRMATION_MESSAGE");

			Click(locator1 = "ACSettings#DELETE_CONFIRMATION_INPUT");

			Paste(locator1 = "ACSettings#DELETE_CONFIRMATION_INPUT");

			Click(locator1 = "ACSettings#DELETE_CONFIRMATION_BUTTON");
		}
	}

	macro deleteKeywordCheckbox {
		if (IsVisible(locator1 = "ACSettings#KEYWORD_NAME", value1 = "${keyword}")) {
			Click(locator1 = "ACSettings#KEYWORD_DELETE_CHECKBOX");

			Click(locator1 = "ACSettings#DELETE_FROM_TOOLBAR");

			Click(locator1 = "ACSettings#CONTINUE_BUTTON");
		}
	}

	macro deleteKeywordIcon {
		if (IsVisible(locator1 = "ACSettings#KEYWORD_NAME", value1 = "${keyword}")) {
			Click(locator1 = "ACSettings#KEYWORD_DELETE_ICON");

			Click(locator1 = "ACSettings#CONTINUE_BUTTON");
		}
	}

	macro deleteUser {
		if (IsVisible(locator1 = "ACSettings#USER_LIST_EMAIL", value1 = "${userDelete}")) {
			Click(locator1 = "ACSettings#DELETE_USER");

			Click(locator1 = "ACSettings#CONTINUE_BUTTON");
		}
	}

	macro goToApis {
		ACSettings.goToSettingsNavigation(settingsNavigation = "apis");
	}

	macro goToDataControlAndPrivacy {
		ACSettings.goToSettingsNavigation(settingsNavigation = "data-privacy");
	}

	macro goToDataSources {
		ACSettings.goToSettingsNavigation(settingsNavigation = "data-source");
	}

	macro goToDefinitions {
		ACSettings.goToSettingsNavigation(settingsNavigation = "definitions");
	}

	macro goToProperties {
		ACSettings.goToSettingsNavigation(settingsNavigation = "properties");
	}

	macro goToSettingsNavigation {
		var key_SettingsNavigation = "${settingsNavigation}";

		Click(locator1 = "ACSettings#SETTINGS_NAVIGATION");
	}

	macro goToUsage {
		ACSettings.goToSettingsNavigation(settingsNavigation = "usage");
	}

	macro goToUserManagement {
		ACSettings.goToSettingsNavigation(settingsNavigation = "users");
	}

	macro goToWorkspace {
		ACSettings.goToSettingsNavigation(settingsNavigation = "settings/workspace");
	}

	@summary = "Takes the token from Analytics Clouds to use on during the DXP connection process"
	macro takeTokenFromAnalyticsCloud {
		ACSettings.goToDataSources();

		Click(locator1 = "ACDXPSettings#AC_GENERIC_ADD_OR_CONFIRMATION_BUTTON");

		Click(locator1 = "ACSettings#DXP_DATA_SOURCE_OPTION");

		Copy(locator1 = "ACSettings#TOKEN_INPUT_FIELD");
	}

}