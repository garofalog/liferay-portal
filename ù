pick eed9f340f350 COMMERCE-8889 modal_content refactoring
f e44e660f2e14 modal
pick 91b46fb4f6e5 COMMERCE-8888 modal taglib refactoring
pick 04ea10fe570a COMMERCE-8887 mini_cart taglib refactoring
pick 50b11b370a32 COMMERCE-8895 step_tracker taglib refactoring
pick 98a967f9d9ac COMMERCE-9062 compare_checkbox taglib refactoring

# Rebase di 4b43296a7d47..e44e660f2e14 su 4b43296a7d47 (6 comandi)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup [-C | -c] <commit> = like "squash" but keep only the previous
#                    commit's log message, unless -C is used, in which case
#                    keep only this commit's message; -c is same as -C but
#                    opens the editor
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified); use -c <commit> to reword the commit message
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# Rimuovendo una riga da qui IL COMMIT CORRISPONDENTE ANDRÀ PERDUTO.
#
# Ciò nonostante, se rimuovi tutto, il rebase sarà annullato.
#
